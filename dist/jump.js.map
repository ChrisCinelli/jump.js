{"version":3,"file":null,"sources":["/Users/bret/ch/jump/src/easing.js","/Users/bret/ch/jump/src/jump.js"],"sourcesContent":["// Robert Penner's easeInOutQuad\n\n// find the rest of his easing functions here: http://robertpenner.com/easing/\n// find them exported for ES6 consumption here: https://github.com/jaxgeller/ez.js\n\nexport default (t, b, c, d) => {\n  t /= d / 2\n  if(t < 1) return c / 2 * t * t + b\n  t--\n  return -c / 2 * (t * (t - 2) - 1) + b\n}\n","import easeInOutQuad from './easing.js'\n\nconst jumper = () => {\n  // private variable cache\n  // no variables are created during a jump, preventing memory leaks\n\n  let element         // element to scroll to                   (node)\n\n  let start           // where scroll starts                    (px)\n  let stop            // where scroll stops                     (px)\n\n  let offset          // adjustment from the stop position      (px)\n  let easing          // easing function                        (function)\n  let a11y            // accessibility support flag             (boolean)\n\n  let distance        // distance of scroll                     (px)\n  let duration        // scroll duration                        (ms)\n\n  let timeStart       // time scroll started                    (ms)\n  let timeElapsed     // time spent scrolling thus far          (ms)\n\n  let next            // next scroll position                   (px)\n\n  let callback        // to call when done scrolling            (function)\n\n  let requestID       // requestAnimationFrame id               (number)\n\n  // scroll position helper\n\n  function location() {\n    return window.scrollY || window.pageYOffset\n  }\n\n  // element offset helper\n\n  function top(element) {\n    return element.getBoundingClientRect().top + start\n  }\n\n  // rAF loop helper\n\n  function loop(timeCurrent) {\n    // store time scroll started, if not started already\n    if(!timeStart) {\n      timeStart = timeCurrent\n    }\n\n    // determine time spent scrolling so far\n    timeElapsed = timeCurrent - timeStart\n\n    // calculate next scroll position\n    next = easing(timeElapsed, start, distance, duration)\n\n    // scroll to it\n    window.scrollTo(0, next)\n\n    // check progress\n    if (timeElapsed < duration) {\n      // continue scroll loop\n      requestID = requestAnimationFrame(loop)\n    } else {\n      // scrolling is done\n      done();\n    }\n  }\n\n  // scroll finished helper\n\n  function done() {\n    // account for rAF time rounding inaccuracies\n    window.scrollTo(0, start + distance)\n\n    // if scrolling to an element, and accessibility is enabled\n    if(element && a11y) {\n      // add tabindex indicating programmatic focus\n      element.setAttribute('tabindex', '-1')\n\n      // focus the element\n      element.focus()\n    }\n\n    // if it exists, fire the callback\n    if(typeof callback === 'function') {\n      callback()\n    }\n\n    // reset time for next jump\n    timeStart = false\n  }\n\n  // cancels the requestAnimationFrame\n\n  function cancel() {\n    cancelAnimationFrame(requestID);\n  }\n\n  // API\n\n  function jump(target, options = {}) {\n    // resolve options, or use defaults\n    duration = options.duration || 1000\n    offset   = options.offset   || 0\n    callback = options.callback                       // \"undefined\" is a suitable default, and won't be called\n    easing   = options.easing   || easeInOutQuad\n    a11y     = options.a11y     || false\n\n    // cache starting position\n    start = location()\n\n    // resolve target\n    switch(typeof target) {\n      // scroll from current position\n      case 'number':\n        element = undefined           // no element to scroll to\n        a11y    = false               // make sure accessibility is off\n        stop    = start + target\n      break\n\n      // scroll to element (node)\n      // bounding rect is relative to the viewport\n      case 'object':\n        element = target\n        stop    = top(element)\n      break\n\n      // scroll to element (selector)\n      // bounding rect is relative to the viewport\n      case 'string':\n        element = document.querySelector(target)\n        stop    = top(element)\n      break\n    }\n\n    // resolve scroll distance, accounting for offset\n    distance = stop - start + offset\n\n    // resolve duration\n    switch(typeof options.duration) {\n      // number in ms\n      case 'number':\n        duration = options.duration\n      break\n\n      // function passed the distance of the scroll\n      case 'function':\n        duration = options.duration(distance)\n      break\n    }\n\n    // start the loop\n    requestID = requestAnimationFrame(loop)\n\n    return cancel\n  }\n\n  // expose only the jump method\n  return {\n    jump,\n    cancel,\n  };\n}\n\n// export singleton\n\nconst singleton = jumper()\n\nexport default singleton\n"],"names":["t","b","c","d","jumper","location","window","scrollY","pageYOffset","top","element","getBoundingClientRect","start","loop","timeCurrent","timeStart","easing","timeElapsed","distance","duration","scrollTo","next","requestAnimationFrame","done","a11y","setAttribute","focus","callback","cancel","requestID","jump","target","options","offset","easeInOutQuad","undefined","document","querySelector","stop","singleton"],"mappings":"+KAKA,gBAAgBA,EAAGC,EAAGC,EAAGC,aAClBA,EAAI,EACNH,EAAI,EAAUE,EAAI,EAAIF,EAAIA,EAAIC,QAEzBC,EAAI,GAAKF,GAAKA,EAAI,GAAK,GAAKC,0LCPhCG,EAAS,mBA2BJC,WACAC,QAAOC,SAAWD,OAAOE,oBAKzBC,GAAIC,SACJA,GAAQC,wBAAwBF,IAAMG,UAKtCC,GAAKC,GAERC,MACUD,KAIAA,EAAcC,IAGrBC,EAAOC,EAAaL,EAAOM,EAAUC,UAGrCC,SAAS,EAAGC,GAGfJ,EAAcE,IAEJG,sBAAsBT,eAS7BU,YAEAH,SAAS,EAAGR,EAAQM,GAGxBR,GAAWc,MAEJC,aAAa,WAAY,QAGzBC,SAIa,kBAAbC,WAKE,UAKLC,0BACcC,WAKdC,GAAKC,MAAQC,uEAETA,EAAQb,UAAY,MACpBa,EAAQC,QAAY,IACpBD,EAAQL,WACRK,EAAQhB,QAAYkB,IACpBF,EAAQR,OAAY,IAGvBnB,uBAGM0B,iBAAAA,QAEP,WACOI,UACA,IACAvB,EAAQmB,YAKf,WACOA,IACAtB,EAAIC,aAKX,WACO0B,SAASC,cAAcN,KACvBtB,EAAIC,YAKP4B,EAAO1B,EAAQqB,IAGZD,EAAQb,eAEf,WACQa,EAAQb,mBAIhB,aACQa,EAAQb,SAASD,YAKpBI,sBAAsBT,GAE3Be,KAlJLlB,UAEAE,SACA0B,SAEAL,SACAjB,SACAQ,SAEAN,SACAC,SAEAJ,SACAE,SAEAI,SAEAM,SAEAE,kCA2IAU,EAAYnC"}